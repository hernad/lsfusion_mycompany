MODULE OutgoingPaymentCanceled;

REQUIRE OutgoingPaymentDone;

NAMESPACE Invoicing;
    
EXTEND CLASS OutgoingPaymentStatus {
    canceled 'Canceled'
}
canceled 'Canceled' = DATA BOOLEAN (OutgoingPayment);
active 'Active' (OutgoingPayment s) = (ready(s) OR done(s)) AND NOT canceled(s);

status(OutgoingPayment s) += WHEN canceled(s) THEN OutgoingPaymentStatus.canceled;
colorStatus(OutgoingPayment s) += WHEN status(s) = OutgoingPaymentStatus.canceled THEN RGB(181,195,247);

cancel 'Cancel' (OutgoingPayment s) {
    APPLY; 
    IF canceled() THEN RETURN;
           
    NEWSESSION {
        canceled(s) <- TRUE;
        APPLY;
    }
}

EXTEND FORM outgoingPayment
    PROPERTIES(p) cancel SHOWIF NOT (status(p) = OutgoingPaymentStatus.draft OR status(p) = OutgoingPaymentStatus.canceled), canceled 
;

DESIGN outgoingPayment {
    secondaryActions {
        MOVE PROPERTY(cancel(p));
    }             
    status {
        MOVE PROPERTY(canceled(p));                               
    }    
}

EXTEND FORM outgoingPayments    
    EXTEND FILTERGROUP status
        FILTER 'Canceled' status(p) = OutgoingPaymentStatus.canceled    
;
