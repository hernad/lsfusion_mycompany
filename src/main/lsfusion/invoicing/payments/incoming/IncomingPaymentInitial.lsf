MODULE IncomingPaymentInitial;

REQUIRE IncomingPaymentType,
        IncomingPaymentOutgoing;

NAMESPACE Invoicing;

loadDefaultData () + {
    NEW i = IncomingPaymentType {
        name(i) <- 'Payment to the account by the buyer';
        id(i) <- 'customerbank';
        bank(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Payment to the account by the buyer';
            series(n) <- 'C1';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }
    NEW i = IncomingPaymentType {
        name(i) <- 'Cash payment by the Customer';
        id(i) <- 'customercash';
        cash(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Cash payment by the Customer';
            series(n) <- 'C9';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }
    NEW i = IncomingPaymentType {
        name(i) <- 'Return to supplier account';
        id(i) <- 'vendorbank';
        bank(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Return to supplier account';
            series(n) <- 'R2';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }
    NEW i = IncomingPaymentType {
        name(i) <- 'Cash back to Vendor';
        id(i) <- 'vendorcash';
        cash(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Cash back to Vendor';
            series(n) <- 'ВН';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }

    // outgoing
    NEW i = IncomingPaymentType {
        name(i) <- 'Transfer from another account';
        id(i) <- 'transfer';
        interpay(i) <- TRUE;
        bank(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Transfer from another account';
            series(n) <- 'T2';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }
    NEW i = OutgoingPaymentType {
        name(i) <- 'Transfer to another account';
        id(i) <- 'transfer';
        bank(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Transfer to another account';
            series(n) <- 'T3';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
        incomingPaymentType(i) <- incomingPaymentType('transfer');
        autoCreateIncomingPayment(i) <- TRUE;
    }
    NEW i = IncomingPaymentType {
        name(i) <- 'Entering initial balances';
        id(i) <- 'initial';
        bank(i) <- TRUE;
        cash(i) <- TRUE;
        NEW n = Numerator {
            name(n) <- 'Entering initial cash balances';
            series(n) <- 'Н2';
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator(i) <- n;
        }
    }
}