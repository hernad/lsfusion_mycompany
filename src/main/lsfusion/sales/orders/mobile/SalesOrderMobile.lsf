MODULE SalesOrderMobile;

REQUIRE Input, Reflection, 
        Mobile, PartnerMobile, ItemMobile, CategoryMobile, LocationMobile, 
        SalesOrderLocked, SalesOrderDiscount, SalesOrderPack;

NAMESPACE Sales;

// order
@defineChangeInput(customer, Order, Partner, dialogPartnersMobile, p);
@defineChangeInput(location, Order, Location, dialogLocationsMobile, l);
@defineChangeInput(item, OrderLine, Item, dialogItemsMobile, i);

FORM orderMobile 'Mobile order'
    OBJECTS o = Order PANEL
    PROPERTIES(o) nameType, dateTime, number, 
                  nameCustomer ON CHANGE changeCustomer(o), 
                  nameLocation ON CHANGE changeLocation(o),
                  untaxedAmount, amount

    PROPERTIES(o) confirm SHOWIF (status(o) = OrderStatus.sent OR status(o) = OrderStatus.draft), confirmed 
    
    OBJECTS l = OrderLine
    PROPERTIES(l) nameItem ON CHANGE changeItem(l) 
    PROPERTIES(l) 'Quantity' = quantity, price, NEW, DELETE
    PROPERTIES(l) PANEL SHOWIF pack(type(o))
                  'Places' = packQuantity ON CHANGE changePackQuantity(l),
                  'In place' = packRatio READONLY
    PROPERTIES(l) PANEL nameSalesDiscount, '' = discount, '' = discountPrice
    PROPERTIES(l) PANEL READONLY idItem, idBarCodeItem,
                                 nameUom, taxes, 'Amount' = amount
    FILTERS order(l) = o
;

DESIGN orderMobile {
    caption = (CONCAT ' ', 'Order', 'No' + number(o));
    
    OBJECTS {
        NEW pane {
            type = TABBED;
            fill = 1;
            NEW params {
                caption = 'Parameters';
                MOVE PROPERTY(nameType(o)) { alignment = STRETCH; }
                NEW id {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(dateTime(o));
                    MOVE PROPERTY(number(o));
                }
                MOVE PROPERTY(nameCustomer(o)) { alignment = STRETCH; }
                MOVE PROPERTY(nameLocation(o)) { alignment = STRETCH; }
                
                NEW amount {
                    flex = 1;
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(untaxedAmount(o));
                    MOVE PROPERTY(amount(o));
                }
                
                NEW actions {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    
                    MOVE PROPERTY(confirm(o));
                    MOVE PROPERTY(confirmed(o));
                }
                
                MOVE TOOLBARBOX;
            }
            NEW lines {
                caption = CONCAT ' ', 'Strings', '(' + countOrderLine(o) + ')';
                MOVE GRID(l) {
                    headerHeight = 24;
                    PROPERTY(quantity(l)) { charWidth = 5; }
                }
                MOVE TOOLBARBOX(l);
                NEW pack {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(packQuantity(l));
                    MOVE PROPERTY(packRatio(l));
                }
                NEW discount {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(nameSalesDiscount(l));
                    MOVE PROPERTY(discount(l));
                    MOVE PROPERTY(discountPrice(l));
                }
                NEW item {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(idItem(l));
                    MOVE PROPERTY(idBarCodeItem(l));
                }
                NEW misc {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    MOVE PROPERTY(nameUom(l));
                    MOVE PROPERTY(taxes(l));
                    MOVE PROPERTY(amount(l));
                }
                REMOVE TOOLBARSYSTEM(l);
            }
        }
    }
    PROPERTY(formApply()) { caption = ''; }
    PROPERTY(formCancel()) { caption = ''; }
}

// orders

newMobile 'Add to' () {
    NEWSESSION {
        NEW o = Order {
            SHOW orderMobile OBJECTS o = o DOCKED;
        }
    }
} IMAGE 'add.png';

editMobile 'Edit' (Order o) {
    NEWSESSION {
        SHOW orderMobile OBJECTS o = o DOCKED;
    }
} IMAGE 'edit.png' CHANGEMOUSE 'DBLCLK';

customerFilter = DATA LOCAL Partner ();
nameCustomerFilter 'Customer' = name(customerFilter());
@defineChangeInput(customerFilter, Partner, dialogPartnersMobile, p);    
clearCustomerFilter '' () { customerFilter() <- NULL; } IMAGE 'delete.png';

FORM ordersMobile 'Mobile order'
    OBJECTS o = Order
    PROPERTIES(o) READONLY date, nameStatus BACKGROUND colorStatus(o), number, nameCustomer
    PROPERTIES newMobile() DRAW o TOOLBAR, editMobile(o) TOOLBAR, DELETE(o) NEWSESSION

    FILTERGROUP unlocked
        FILTER 'Open' NOT locked(o) DEFAULT    

    PROPERTIES() nameCustomerFilter ON CHANGE changeCustomerFilter(), clearCustomerFilter
    FILTERS customer(o) = customerFilter() OR NOT customerFilter()
;

DESIGN ordersMobile {
    caption = 'Orders';
    OBJECTS {
        NEW filters {
            type = CONTAINERH;
            MOVE PROPERTY(nameCustomerFilter());
            MOVE PROPERTY(clearCustomerFilter());
            MOVE FILTERGROUPS(o);
            MOVE PROPERTY(formRefresh());
        }
        MOVE GRID(o);
        MOVE TOOLBARSYSTEM(o);
        MOVE TOOLBAR(o);
        REMOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    dashboards {
        NEW ordersMobile;
    }
}

showMobileForms() + { 
    IF permit(currentUser(), navigatorElementCanonicalName('Sales.ordersMobile')) THEN
        SHOW ordersMobile NOWAIT; 
}