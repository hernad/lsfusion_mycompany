MODULE InventoryReport;

REQUIRE InvLedger, ResLedger, ItemImage, ItemAttribute, LocationEmployee, BarCode;

NAMESPACE Inventory;

selectedDateTime 'Select date' = DATA LOCAL DATETIME () PREREAD;
singleLocation 'One composition at a time' = DATA LOCAL BOOLEAN () PREREAD;
onHandDateTime 'Balance as of date' (Location l, Product p) = onHandA(l, p, selectedDateTime());
                                
FORM inventoryReport 'Current balances'
    PROPERTIES selectedDateTime(), singleLocation()
    
    TREE locations lt = Location PARENT parent(lt)
    PROPERTIES READONLY name(lt)
    ORDERS name(lt)
    
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDERS name(c)
    
    OBJECTS lp = (l = Location, p = Product)
    PROPERTIES READONLY 'Stock' = canonicalName(l) SHOWIF NOT singleLocation() 
    PROPERTIES(p) READONLY 'Product' = name, nameUom, idBarCode, id, reference
    PROPERTIES(l, p) READONLY reserved, available
    PROPERTIES(l, p) READONLY SHOWIF NOT selectedDateTime() onHand, onHandRec
    PROPERTIES(l, p) READONLY SHOWIF selectedDateTime() onHandDateTime 
    PROPERTIES(l, p) READONLY dateReceived, dateShipped
    PROPERTIES(p) READONLY image PANEL
    PROPERTIES(p) NEWSESSION EDIT
    ORDERS canonicalName(l), name(p) 
    FILTERS IF singleLocation() THEN l = lt ELSE isChild(l, lt),
            level(category(p), c),
            accessGranted(l)

    FILTERGROUP rowFilter
        FILTER 'With the change'
            IF selectedDateTime() THEN onHandDateTime(l, p) ELSE 
                (IF singleLocation() THEN onHandRec(l, p) ELSE onHand(l, p)) DEFAULT
        FILTER 'With income' dateReceived(l, p)
                
    OBJECTS il = InvLedger
    PROPERTIES(il) READONLY class, type, dateTime, number, namePartner,
                            nameFromLocation, onHandAFromLocation, 
                            nameToLocation, onHandAToLocation,
                            quantity
    PROPERTIES(il) NEWSESSION EDIT
    FILTERGROUP activeInv
        FILTER 'Active' active(il) DEFAULT
    FILTERS product(il) = p,
            IF singleLocation() THEN (level(fromLocation(il), l) OR level(toLocation(il), l))
                                ELSE (fromLocation(il) = l OR toLocation(il) = l),
            dateTime(il) <= selectedDateTime() OR NOT selectedDateTime()

    OBJECTS rl = ResLedger
    PROPERTIES(rl) READONLY class, type, dateTime, number, 
                            namePartner, nameLocation, 
                            reserved
    PROPERTIES(rl) NEWSESSION EDIT
    FILTERS product(rl) = p,
            IF singleLocation() THEN (TRUE IF level(location(rl), l))
                                ELSE location(rl) = l,
            dateTime(il) <= selectedDateTime() OR NOT selectedDateTime()
            
    OBJECTS a = ItemAttribute
    OBJECTS rlp = (ll = Location, rp = Product) PIVOT
    PROPERTIES READONLY 'Stock' = canonicalName(ll), 'Product' = name(rp), value(rp, a) COLUMNS (a) HEADER name(a),
                        level1(rp), level2(rp), level3(rp), level4(rp), 'Full group' = canonicalNameCategory(rp)
    PROPERTIES(ll, rp) READONLY dateReceived, dateShipped
    PROPERTIES READONLY MEASURE reserved(ll, rp), available(ll, rp), onHand 'The remainder' = IF selectedDateTime() THEN onHandDateTime(ll, rp) ELSE onHand(ll, rp)
    FILTERS IF selectedDateTime() THEN onHandDateTime(ll, rp) ELSE onHand(ll, rp),
            accessGranted(ll)
;

DESIGN inventoryReport {
    OBJECTS {
        NEW header {
            type = CONTAINERH;
            MOVE PROPERTY (selectedDateTime());
            MOVE PROPERTY (singleLocation());
        }
        NEW invReport {
            fill = 1;
            type = TABBED;
            NEW pane {
                caption = 'Current balances';
                type = SPLITH;
                fill = 1;
                NEW filterTabs {
                    fill = 1;
                    type = TABBED;
                    MOVE BOX(TREE locations) { caption = 'Storage locations'; }
                    MOVE BOX(TREE categories) { caption = 'Categories'; }
                }
                NEW pane2 {
                    fill = 3;
                    type = SPLITV;
                    MOVE BOX(lp);
                    NEW tabs {
                        type = TABBED;
                        MOVE BOX(il) { caption = 'Remaining change register'; }
                        MOVE BOX(rl) { caption = 'Reserves register'; }
                        NEW image { 
                            caption = 'Picture';
                            MOVE PROPERTY(image(p)) { caption = ''; fill = 1; } 
                        }
                    }
                }               
            }
            MOVE BOX (rlp) { caption = 'Report'; }
        }
    }
}

@defineBarCodeSeek(inventoryReport, p, lp);

@defineItemAttributeForm(inventoryReport, p, lp);
DESIGN inventoryReport {
    filterTabs {
        MOVE BOX(ia) { caption = 'Attributes'; }
    }
}

NAVIGATOR {
    reporting {
        NEW inventoryReport;
    }
}