MODULE DateUtils;

REQUIRE Time;

NAMESPACE Utils;

// filters

GROUP filterDates 'Date interval';

filterDateFrom 'Date s' = DATA LOCAL NESTED DATE() IN filterDates;
filterDateTo 'by' = DATA LOCAL NESTED DATE() IN filterDates;

setFilterToday 'Today' () {
    filterDateFrom() <- currentDate(); 
    filterDateTo() <- currentDate();
} IN filterDates;

setFilterYesterday 'Yesterday' () {
    filterDateFrom() <- subtract(currentDate(), 1); 
    filterDateTo() <- subtract(currentDate(), 1);
} IN filterDates;

setFilterTomorrow 'Tomorrow' () {
    filterDateFrom() <- sum(currentDate(), 1); 
    filterDateTo() <- sum(currentDate(), 1);
} IN filterDates;

setFilterLast7Days '7 days' () {
    filterDateFrom() <- subtract(currentDate(), 7); 
    filterDateTo() <- subtract(currentDate(), 1);
} IN filterDates;

setFilterLast30Days '30 days' () {
    filterDateFrom() <- subtract(currentDate(), 30); 
    filterDateTo() <- subtract(currentDate(), 1);
} IN filterDates;

setFilterLastCurrentMonth 'This month' () {
    filterDateFrom() <- firstDayOfMonth(currentDate()); 
    filterDateTo() <- currentDate();
} IN filterDates;

setFilterLastCurrentYear 'This year' () {
    filterDateFrom() <- toDateFormat('' + currentYear() + '0101', 'YYYYMMDD'); 
    filterDateTo() <- currentDate();
} IN filterDates;

META defineDateFilterForm(form, let, prefix)
    EXTEND FORM form
        PROPERTIES() filterDateFrom, filterDateTo, setFilterToday, setFilterYesterday, setFilterTomorrow, setFilterLast7Days, setFilterLast30Days, setFilterLastCurrentMonth, setFilterLastCurrentYear 

        FILTERS NOT prefix###date(let) < filterDateFrom(), NOT prefix###date(let) > filterDateTo() 
    ;
    
    DESIGN form {
        GROUP (filterDates) { type = CONTAINERH; }
    }
END

META defineDateFilterForm(form, let)
    @defineDateFilterForm(form, let, );
END

// aggregations

META defineDateAggregation(cls, prefix, caption)
    prefix###nameDOW 'День недели'##caption (cls o) = extractDOWName(prefix###date(o));
    prefix###week 'Неделя'##caption (cls o) = extractWeek(prefix###date(o));
    
    prefix###numberMonth '№ месяца'##caption (cls o) = extractMonthNumber(prefix###date(o));
    prefix###nameMonth 'Месяц'##caption (cls o) = extractMonthName(prefix###date(o));
    prefix###year 'Год'##caption (cls o) = extractYear(prefix###date(o));
END

META defineDateAggregation(obj)
    @defineDateAggregation(obj, , );
END

META defineDateTimeAggregation(cls, prefix, caption)
    prefix###date 'Date'##caption (cls o) = DATE(prefix###dateTime(o));
    
    @defineDateAggregation(cls, prefix, caption);

    prefix###minute 'Минута'##caption (cls o) = extractMinute(prefix###dateTime(o));
    prefix###hour 'Час'##caption (cls o) = extractHour(prefix###dateTime(o));
END

META defineDateTimeAggregation(obj)
    @defineDateTimeAggregation(obj, , );
END

META defineDateAggregationForm(form, let, prefix)
    EXTEND FORM form
        PROPERTIES(let) READONLY AFTER prefix###date(let) prefix###nameDOW, prefix###week, prefix###numberMonth, prefix###nameMonth, prefix###year
    ;
END

META defineDateAggregationForm(form, let)
    @defineDateAggregationForm(form, let, );
END

META defineDateTimeAggregationForm(form, let, prefix)
    EXTEND FORM form
        PROPERTIES(let) READONLY AFTER prefix###dateTime(let) prefix###minute, prefix###hour, prefix###date
    ;
    @defineDateAggregationForm(form, let, prefix);
END

META defineDateTimeAggregationForm(form, let)
    @defineDateTimeAggregationForm(form, let, );
END